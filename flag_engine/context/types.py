# generated by datamodel-codegen:
#   filename:  https://raw.githubusercontent.com/Flagsmith/flagsmith/main/sdk/evaluation-context.json  # noqa: E501
#   timestamp: 2025-08-25T11:10:31+00:00

from __future__ import annotations

from typing import Any, Dict, List, Literal, Optional, TypedDict, Union

from typing_extensions import NotRequired

from flag_engine.segments.types import ConditionOperator, ContextValue, RuleType


class EnvironmentContext(TypedDict):
    key: str
    name: str


class FeatureValue(TypedDict):
    value: Any
    weight: float


class IdentityContext(TypedDict):
    identifier: str
    key: str
    traits: NotRequired[Dict[str, ContextValue]]


class StrValueSegmentCondition(TypedDict):
    property: str
    operator: ConditionOperator
    value: str


class InOperatorSegmentCondition(TypedDict):
    property: str
    operator: Literal["IN"]
    value: List[str]


SegmentCondition = Union[StrValueSegmentCondition, InOperatorSegmentCondition]


class SegmentRule(TypedDict):
    type: RuleType
    conditions: NotRequired[List[SegmentCondition]]
    rules: NotRequired[List[SegmentRule]]


class FeatureContext(TypedDict):
    key: str
    feature_key: str
    name: str
    enabled: bool
    value: Any
    variants: NotRequired[List[FeatureValue]]
    priority: NotRequired[float]


class SegmentContext(TypedDict):
    key: str
    name: str
    rules: List[SegmentRule]
    overrides: NotRequired[List[FeatureContext]]


class EvaluationContext(TypedDict):
    environment: EnvironmentContext
    identity: NotRequired[Optional[IdentityContext]]
    segments: NotRequired[Dict[str, SegmentContext]]
    features: NotRequired[Dict[str, FeatureContext]]
